(let clock (Module.new Clock.new "clock" '((:bpm 280.0))))

(let s1 (Module.new Sequencer.new "s1" (list
    (list :trigger (get clock :output))
    (list :frequencies '(:c2  :e2  :b2  :e2  :c3  :b3  :c2))
    (list :amplitudes  '(0.2  0.3  0.1  0.5  0.8  0.2  0.2))
    (list :triggers    '(1    1    1    1    1    1    1  ))
)))

(let s2 (Module.new Sequencer.new "s2" (list
    (list :trigger (get clock :output))
    (list :frequencies '(:g3  :b3  :f#3 :b3  :g4  :f#3 :g3))
    (list :amplitudes  '(0.4  0.5  0.4  0.2  0.4  0.3  0.5))
    (list :triggers    '(1    1    1    1    1    1    1  ))
)))

(let o1 (Module.new Osc.new "o1" (list
    (list :frequency (get s1 :frequency_output))
    (list :amplitude (get s1 :amplitude_output))
    (list :waveshape :triangle)
)))

(let o2 (Module.new Osc.new "o2" (list
    (list :frequency (get s2 :frequency_output))
    (list :amplitude (get s2 :amplitude_output))
    (list :waveshape :triangle)
)))

(output (get o1 :output))
(output (get o2 :output))
